{"version":3,"sources":["images/reward-01.jpg","sounds/fanfare01.wav","models/gameModels.ts","components/NoPuzzle.tsx","components/SingleKeyMapping.tsx","components/KeyMap.tsx","components/LetterEntry.tsx","components/LetterBoard.tsx","components/KeyboardHelp.tsx","components/Progress.tsx","components/GameControl.tsx","components/Playing.tsx","data/sample-puzzles/puzzles-01.ts","data/sample-puzzles/puzzles-02.ts","services/quoteService.ts","components/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","GameStates","NoPuzzle","props","useState","text","setText","className","style","marginTop","rows","cols","value","onChange","ev","target","disabled","length","onClick","setCypher","setPlainText","useRandomQuote","randomQuoteCount","SingleKeyMapping","keyClass","isSelectedKey","width","height","border","borderRadius","fromKey","toKey","KeyMap","keymap","selectedKey","keys","Array","from","map","k","key","get","id","showKeyMap","LetterEntry","fontSize","LetterBoard","backgroundColor","marginLeft","marginRight","cypher","lineMax","lines","nextLine","line","remaining","push","breakLines","index","rowIndex","enclosedLetters","split","c","getLetter","cell","float","toString","clear","showRow","showBoard","cypherLetter","has","toUpperCase","breakIndex","charAt","substring","KeyboardHelp","fontWeight","fanfare","UIfx","fanfareSound","volume","throttleMs","Progress","awardShown","setAwardShown","useEffect","play","setTimeout","fontFamily","src","reward","alt","GameControl","startNewGame","Playing","focusElementRef","useRef","current","focus","setSelectedKey","keyMap","cypherSet","Set","filter","isLetter","targetsMapped","lettersMatches","forEach","size","remainingToGuess","ref","tabIndex","onKeyDown","undefined","values","find","nothingMapsTo","mapSelectedKeyTo","unselectKey","invokeUndo","captureKey","margin","upper","v","mapKey","encrypt","plainText","alphabet","shuffled","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","letterArray","letterMap","Map","i","set","encryptedText","join","console","log","getAllQuotes","quotes1","quotes2","Game","NO_PUZZLE","gameState","setGameState","buildEmptyMap","setKeymap","undoBuffer","setUndoBuffer","setCypherAndPlay","PLAYING","scramblePlaintextAndPlay","quote","quotes","QuoteService","author","undo","lastMap","pop","newKeyMap","setKeyMapping","renderView","String","fromCharCode","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ca6a065e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reward-01.97b0e411.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fanfare01.03198a96.wav\";","export enum GameStates {\n    NO_PUZZLE = \"NO_PUZZLE\",\n    PLAYING = \"PLAYING\"\n}\n\nexport type Quotation =\n{\n    plainText: string;\n    author?: string;\n}","import React, {useState} from 'react';\nimport '../App.css';\n\nexport type NoPuzzleProps = {\n  randomQuoteCount: number;\n  setCypher: (cypher:string) => void;\n  setPlainText: (plainText:string) => void;\n  useRandomQuote: () => void;\n}\nexport default function NoPuzzle(props:NoPuzzleProps) {\n\n  const [text, setText] = useState('');\n\n\n  return (\n    <div className=\"NoPuzzle\" style={{marginTop:\"10vh\"}}>\n      <div>\n        Enter the cypher or plaintext:\n      </div>\n      <div>\n        <textarea rows={10} cols={80} value={text} onChange={(ev) => setText(ev.target.value)} />\n      </div>\n      <div>\n        <button className=\"playButton\" disabled={text.length == 0} onClick={() => props.setCypher(text)}>Play</button>\n        <button className=\"playButton\" disabled={text.length == 0} onClick={() => props.setPlainText(text)}>Scramble &amp; Play</button>\n        <button className=\"playButton\" onClick={props.useRandomQuote}>Random (from list of {props.randomQuoteCount})</button>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport '../App.css';\n\nexport type SingleKeyMappingProps = {\n  isSelectedKey: boolean;\n  fromKey: string;\n  toKey: string;\n}\n\nexport default function SingleKeyMapping(props: SingleKeyMappingProps) {\n\n  const keyClass = props.isSelectedKey ? \"key selected\" : \"key\";\n\n  return (\n    <div style={{\n        width: \"42px\",\n        height: \"100px\",\n        border: \"solid 1px black\",\n        borderRadius: \"5px\"\n        }}>\n\n      <div style={{height: \"30px\"}}>\n        <span className={keyClass}>{props.fromKey}</span>\n      </div>\n\n      <div style={{height: \"30px\", marginTop: \"10px\"}}>\n        <span className=\"value\">{props.toKey}</span>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport '../App.css';\nimport SingleKeyMapping from './SingleKeyMapping'\n\nexport type KeymapProps = {\n  keymap: Map<string, string>\n  selectedKey: string;\n}\n\nexport default function KeyMap(props: KeymapProps) {\n\n  return (\n    <div>\n      {showKeyMap(props.keymap, props.selectedKey)}\n    </div>\n  );\n\n  function showKeyMap(keymap: Map<string, string>, selectedKey: string) {\n\n    const keys = Array.from(keymap.keys()).map(k =>\n        (<td key={k}>\n          <SingleKeyMapping fromKey={k} toKey={keymap.get(k) || ''} isSelectedKey={k === selectedKey} />\n        </td>))\n\n    return (\n      <div>\n        <table id=\"keymap\">\n          <tbody>\n            <tr>\n              {keys}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport '../App.css';\n\nexport type LetterEntryProps = {\n  isSelectedKey: boolean;\n  fromKey: string;\n  toKey: string;\n}\n\nexport default function LetterEntry(props: LetterEntryProps) {\n\n  const keyClass = props.isSelectedKey ? \"key selected\" : \"key\";\n\n  return (\n    <div style={{\n        width: \"32px\",\n        height: \"70px\",\n        fontSize: \"16pt\"\n        }}>\n\n      <div style={{height: \"20px\"}}>\n        <span className={keyClass}>{props.fromKey}</span>\n      </div>\n\n      <div style={{height: \"20px\", marginTop: \"5px\"}}>\n        <span className=\"value\">{props.toKey}</span>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport '../App.css';\nimport LetterEntry from './LetterEntry'\nimport { strict } from 'assert';\n\nexport type LetterBoardProps = {\n  cypher: string;\n  keymap: Map<string, string>\n  selectedKey: string;\n}\n\nexport default function LetterBoard(props: LetterBoardProps) {\n\n  return (\n    <div style={{backgroundColor: \"#eeeeee\", border: \"6px gray inset\", \n              borderRadius: \"8px\", width: \"98%\", \n              marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"10px\"}}>\n      {showBoard(props.keymap, props.selectedKey, props.cypher)}\n    </div>\n  );\n\n  function getLetter(keymap: Map<string, string>, cypherLetter: string): string {\n    if (keymap.has(cypherLetter.toUpperCase())) {\n      return keymap.get(cypherLetter.toUpperCase())!\n    }\n\n    return cypherLetter;\n  }\n\n  function showBoard(keymap: Map<string, string>, selectedKey: string, cypher: string) {\n    const MaxCharsPerRow = 35;\n\n    const lines = breakLines(cypher, MaxCharsPerRow);\n    const rows = lines.map((line, index) => showRow(keymap, selectedKey, line, index));\n\n    return (\n      <div>\n        {rows}\n      </div>\n    )\n  }\n\n  function breakLines(cypher: string, lineMax: number) : string[]\n  {\n    const lines = []\n    let [line, remaining] = nextLine(cypher, lineMax);\n\n    while (line.length > 0) {\n      lines.push(line);\n      [line, remaining] = nextLine(remaining, lineMax);\n    }\n\n    return lines;\n  }\n\n  function nextLine(text: string, lineMax: number) : [string, string]\n  {\n    if (text.length <= lineMax) {\n      return [text, \"\"]\n    }\n\n    let breakIndex = lineMax + 1;\n    while (breakIndex > 0 && isText(text.charAt(breakIndex)))\n    {\n      --breakIndex;\n    }\n\n    if (breakIndex > 1) {\n      return [text.substring(0, breakIndex), text.substring(breakIndex)]\n    }\n    else\n    {\n      return [text, \"\"]\n    }\n  }\n\n  function isText(str:string) : boolean \n  {\n    return str !== ' ';\n  }\n\n  function showRow(keymap: Map<string, string>, selectedKey: string, cypher: string, rowIndex: number) {\n    const letters = cypher.split('');\n    const letterEntries = letters.map(c => <LetterEntry isSelectedKey={c === selectedKey} fromKey={c} toKey={getLetter(keymap, c)} />)\n    const enclosedLetters = letterEntries.map((cell,index) => (\n        <div style={{float: \"left\"}}\n             key={rowIndex.toString() + \"_\" + index}>\n               {cell}\n        </div>)\n    )\n\n    return (\n      <div key={rowIndex} style={{width: \"98%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n        {enclosedLetters}\n        <div style={{clear: \"both\"}} />\n      </div>\n    )\n  }\n}","import React  from 'react';\nimport '../App.css';\n\nexport default function KeyboardHelp() \n{\n    return (\n      <div>\n        <p style={{fontWeight: \"bold\"}}>\n          To unset a letter, press the SPACEBAR after pressing the letter.\n          To invoke UNDO, use the BACKSPACE key.\n        </p>\n      </div>\n    );\n}\n","import React, {useState, useEffect} from 'react';\nimport '../App.css';\nimport reward from '../images/reward-01.jpg';\nimport UIfx from 'uifx'\nimport fanfareSound from '../sounds/fanfare01.wav'\n\nexport type ProgressProps = {\n  remaining: number;\n}\n\nconst fanfare = new UIfx(\n  fanfareSound,\n  {\n    volume: 0.4, // number between 0.0 ~ 1.0\n    throttleMs: 100\n  }\n)\n\nexport default function Progress(props:ProgressProps) \n{\n    const [awardShown, setAwardShown] = useState(false);\n\n    useEffect(() => {\n      //console.log(`In useEffect callback with remaining = ${props.remaining} and awardShow = ${awardShown}`)\n      if (props.remaining === 0 && !awardShown) \n      {\n        fanfare.play(1.0);\n        setTimeout(() => {\n            setAwardShown(true);\n        }, 2500);\n      }\n    });\n\n    if (props.remaining === 0 && !awardShown) \n    {\n      return showCompleteAward();\n    }\n    else\n    {\n      return showInProgress(props.remaining);\n    }\n    \n    function showCompleteAward()\n    {\n      return (\n        <div>\n            <img src={reward} alt=\"You won!\" style={{width: \"300px\", borderRadius:\"15px\", border:\"10px solid puple\"}} />\n        </div>\n      );\n    }\n    \n    function showInProgress(remaining: number)\n    {\n      return <div style={{fontWeight: \"bold\", fontFamily: \"sans-serif\"}}>You have {remaining} letters left to guess.</div>\n    }\n}\n\n","import React, {useState, useEffect} from 'react';\nimport '../App.css';\n\nexport type GameControlProps = {\n  startNewGame: () => void;\n}\n\nexport default function GameControl(props:GameControlProps) \n{\n  return (\n    <div>\n      <button onClick={props.startNewGame}>New Game</button>\n    </div>\n  )\n}","import React, {useRef, useEffect, useState}  from 'react';\nimport '../App.css';\nimport KeyMap from './KeyMap';\nimport LetterBoard from './LetterBoard';\nimport KeyboardHelp from './KeyboardHelp';\nimport Progress from './Progress';\nimport GameControl from './GameControl';\n\nexport type PlayingProps = {\n  cypher: string;\n  keymap: Map<string, string>\n  mapKey: (k: string, v: string) => void;\n  invokeUndo: () => void;\n  startNewGame: () => void;\n}\n\nexport default function Playing(props: PlayingProps) {\n\n  // We have to use an effect to set the focus to our div so we can capture\n  // keys\n  const focusElementRef:any = useRef(null);\n\n  useEffect(() => {\n    if (focusElementRef && focusElementRef.current) {\n      focusElementRef.current.focus();\n    }\n  }, []);\n\n  const [selectedKey, setSelectedKey] = useState('')\n\n  const remaining = remainingToGuess(props.cypher, props.keymap);\n\n  return (\n    <div ref={focusElementRef} tabIndex={0} className=\"Playing\" onKeyDown={ev => captureKey(ev)} >\n      <KeyMap keymap={props.keymap} selectedKey={selectedKey} />\n      <KeyboardHelp />\n      {renderControl()}\n      <LetterBoard cypher={props.cypher} keymap={props.keymap} selectedKey={selectedKey} />\n    </div>\n  );\n\n  function renderControl()\n  {\n    return (\n      <div style={{width: \"90vw\", margin:\"auto\"}}>\n        <div style={{float: \"left\"}}>\n          <Progress remaining={remaining} />\n        </div>\n        <div style={{float: \"right\"}}>\n          <GameControl startNewGame={props.startNewGame} />\n        </div>\n        <div style={{clear: \"both\"}} />\n      </div>\n    );\n  }\n\n  function nothingMapsTo(k:string)\n  {\n    const matched = Array.from(props.keymap.values()).find(value => k === value);\n    return matched === undefined;\n  }\n\n  function captureKey(ev: React.KeyboardEvent) {\n    //console.log(`Just got an [${ev.key}]`);\n    var k = ev.key.toUpperCase();\n    if (k.length === 1 && k >= \"A\" && k <= \"Z\") {\n      if (selectedKey !== '') {\n        // He wants to map the selected key to value k.  Don't let him do it if there is\n        // already something mapped there\n        if (nothingMapsTo(k)) {\n          mapSelectedKeyTo(selectedKey, k)\n        }\n        \n        setSelectedKey('');\n      }\n      else {\n        setSelectedKey(k);\n      }\n    }\n    else if (k === \" \")\n    {\n      if (selectedKey !== '')\n      {\n        mapSelectedKeyTo(selectedKey, '')\n        unselectKey();\n      }\n    }\n    else if (k === \"BACKSPACE\")\n    {\n      undo();\n    }\n  }\n\n  function unselectKey() {\n    setSelectedKey('');\n  }\n\n  function undo()\n  {\n    unselectKey();\n    props.invokeUndo();\n  }\n\n  function isLetter(c:string) : Boolean\n  {\n    const upper = c.toUpperCase();\n    return (upper >= 'A' && upper <= 'Z');\n  }\n\n  function remainingToGuess(cypher: string, keyMap: Map<string, string>)\n  {\n    const cypherSet = new Set(Array.from(cypher).filter(isLetter));\n    const targetsMapped = new Set(Array.from(keyMap.keys()).filter(k => keyMap.get(k) !== ''));\n\n    let lettersMatches = 0;\n    cypherSet.forEach(cypherLetter => {\n      if (targetsMapped.has(cypherLetter)) {\n        ++lettersMatches;\n      }\n    })\n\n    return cypherSet.size - lettersMatches;\n  }\n\n  function mapSelectedKeyTo(k: string, v: string)\n  {\n    props.mapKey(k, v);\n  }\n}","import {Quotation} from '../../models/gameModels'\n\nexport default\n[\n    {\n        \"plainText\": \"The greatest glory in living lies not in never falling, but in rising every time we fall.\",\n        \"author\": \"Nelson Mandela\"\n    },\n    {\n        \"plainText\": \"The way to get started is to quit talking and begin doing.\",\n        \"author\": \"Walt Disney\"\n    },\n    {\n        \"plainText\": \"Your time is limited, so don't waste it living someone else's life. Don't be trapped by dogma – which is living with the results of other people's thinking.\",\n        \"author\": \"Steve Jobs\"\n    },\n    {\n        \"plainText\": \"If life were predictable it would cease to be life, and be without flavor.\",\n        \"author\": \"Eleanor Roosevelt\"\n    },\n    {\n        \"plainText\": \"If you look at what you have in life, you'll always have more. If you look at what you don't have in life, you'll never have enough.\",\n        \"author\": \"Oprah Winfrey\"\n    },\n    {\n        \"plainText\": \"If you set your goals ridiculously high and it's a failure, you will fail above everyone else's success.\",\n        \"author\": \"James Cameron\"\n    },\n    {\n        \"plainText\": \"Life is what happens when you're busy making other plans.\",\n        \"author\": \"John Lennon\"\n    },\n    {\n        \"plainText\": \"Spread love everywhere you go. Let no one ever come to you without leaving happier.\",\n        \"author\": \"Mother Teresa\"\n    },\n    {\n        \"plainText\": \"When you reach the end of your rope, tie a knot in it and hang on.\",\n        \"author\": \"Franklin D. Roosevelt\"\n    },\n    {\n        \"plainText\": \"Always remember that you are absolutely unique. Just like everyone else.\",\n        \"author\": \"Margaret Mead\"\n    },\n    {\n        \"plainText\": \"Don't judge each day by the harvest you reap but by the seeds that you plant.\",\n        \"author\": \"Robert Louis Stevenson\"\n    },\n    {\n        \"plainText\": \"The future belongs to those who believe in the beauty of their dreams.\",\n        \"author\": \"Eleanor Roosevelt\"\n    },\n    {\n        \"plainText\": \"Tell me and I forget. Teach me and I remember. Involve me and I learn.\",\n        \"author\": \"Benjamin Franklin\"\n    },\n    {\n        \"plainText\": \"The best and most beautiful things in the world cannot be seen or even touched - they must be felt with the heart.\",\n        \"author\": \"Helen Keller\"\n    },\n    {\n        \"plainText\": \"It is during our darkest moments that we must focus to see the light.\",\n        \"author\": \"Aristotle\"\n    },\n    {\n        \"plainText\": \"Whoever is happy will make others happy too.\",\n        \"author\": \"Anne Frank\"\n    },\n    {\n        \"plainText\": \"Do not go where the path may lead, go instead where there is no path and leave a trail.\",\n        \"author\": \"Ralph Waldo Emerson\"\n    },\n    {\n        \"plainText\": \"You will face many defeats in life, but never let yourself be defeated.\",\n        \"author\": \"Maya Angelou\"\n    },\n    {\n        \"plainText\": \"The greatest glory in living lies not in never falling, but in rising every time we fall.\",\n        \"author\": \"Nelson Mandela \"\n    },\n    {\n        \"plainText\": \"Never let the fear of striking out keep you from playing the game.\",\n        \"author\": \"Babe Ruth\"\n    },\n    {\n        \"plainText\": \"Life is either a daring adventure or nothing at all.\",\n        \"author\": \"Helen Keller\"\n    },\n    {\n        \"plainText\": \"Many of life's failures are people who did not realize how close they were to success when they gave up.\",\n        \"author\": \"Thomas A. Edison\"\n    },\n    {\n        \"plainText\": \"You have brains in your head. You have feet in your shoes. You can steer yourself any direction you choose.\",\n        \"author\": \"Dr. Seuss\"\n    },\n    {\n        \"plainText\": \"Success is not final; failure is not fatal: It is the courage to continue that counts.\",\n        \"author\": \"Winston S. Churchill\"\n    },\n    {\n        \"plainText\": \"Success usually comes to those who are too busy to be looking for it.\",\n        \"author\": \"Henry David Thoreau\"\n    },\n    {\n        \"plainText\": \"The way to get started is to quit talking and begin doing.\",\n        \"author\": \"Walt Disney\"\n    },\n    {\n        \"plainText\": \"If you really look closely, most overnight successes took a long time.\",\n        \"author\": \"Steve Jobs\"\n    },\n    {\n        \"plainText\": \"The secret of success is to do the common thing uncommonly well.\",\n        \"author\": \"John D. Rockefeller Jr.\"\n    },\n    {\n        \"plainText\": \"I find that the harder I work, the more luck I seem to have.\",\n        \"author\": \"Thomas Jefferson\"\n    },\n    {\n        \"plainText\": \"The real test is not whether you avoid this failure, because you won't. It's whether you let it harden or shame you into inaction, or whether you learn from it; whether you choose to persevere.\",\n        \"author\": \"Barack Obama\"\n    },\n    {\n        \"plainText\": \"You miss 100% of the shots you don't take.\",\n        \"author\": \"Wayne Gretzky\"\n    },\n    {\n        \"plainText\": \"Whether you think you can or you think you can't, you're right.\",\n        \"author\": \"Henry Ford\"\n    },\n    {\n        \"plainText\": \"I have learned over the years that when one's mind is made up, this diminishes fear.\",\n        \"author\": \"Rosa Parks\"\n    },\n    {\n        \"plainText\": \"I alone cannot change the world, but I can cast a stone across the water to create many ripples.\",\n        \"author\": \"Mother Teresa\"\n    },\n    {\n        \"plainText\": \"Nothing is impossible, the word itself says, ‘I'm possible!'\",\n        \"author\": \"Audrey Hepburn\"\n    },\n    {\n        \"plainText\": \"The question isn't who is going to let me; it's who is going to stop me.\",\n        \"author\": \"Ayn Rand\"\n    },\n    {\n        \"plainText\": \"The only person you are destined to become is the person you decide to be.\",\n        \"author\": \"Ralph Waldo Emerson\"\n    }\n] as Quotation[];","import { Quotation } from '../../models/gameModels'\n\nexport default\n    [\n        { \"plainText\": \"You know you’re in love when you can’t fall asleep because reality is finally better than your dreams.\", \"author\": \"Dr. Suess\" },\n        { \"plainText\": \"I’m selfish, impatient and a little insecure. I make mistakes, I am out of control and at times hard to handle. But if you can’t handle me at my worst, then you sure as hell don’t deserve me at my best.\", \"author\": \"Marilyn Monroe\" },\n        { \"plainText\": \"Get busy living or get busy dying.\", \"author\": \"Stephen King\" },\n        { \"plainText\": \"The first step toward success is taken when you refuse to be a captive of the environment in which you first find yourself.\", \"author\": \"Mark Caine\" },\n        { \"plainText\": \"Twenty years from now you will be more disappointed by the things that you didn’t do than by the ones you did do.\", \"author\": \"Mark Twain\" },\n        { \"plainText\": \"When I dare to be powerful – to use my strength in the service of my vision, then it becomes less and less important whether I am afraid.\", \"author\": \"Audre Lorde\" },\n        { \"plainText\": \"A successful man is one who can lay a firm foundation with the bricks others have thrown at him.\", \"author\": \"David Brinkley\" },\n        { \"plainText\": \"I can’t give you a sure-fire formula for success, but I can give you a formula for failure: try to please everybody all the time.\", \"author\": \"Herbert Bayard Swope\" },\n        { \"plainText\": \"Would you like me to give you a formula for success? It’s quite simple, really: Double your rate of failure. You are thinking of failure as the enemy of success. But it isn’t at all. You can be discouraged by failure or you can learn from it, so go ahead and make mistakes. Make all you can. Because remember that’s where you will find success.\", \"author\": \"Thomas J. Watson\" },\n        { \"plainText\": \"It is hard to fail, but it is worse never to have tried to succeed.\", \"author\": \"Theodore Roosevelt\" },\n        { \"plainText\": \"Let us always meet each other with smile, for the smile is the beginning of love.\", \"author\": \"Mother Theresa\" },\n        { \"plainText\": \"Challenges are what make life interesting and overcoming them is what makes life meaningful.\", \"author\": \"Joshua J. Marine\" },\n        { \"plainText\": \"Love is a serious mental disease.\", \"author\": \"Plato\" },\n        { \"plainText\": \"Our greatest fear should not be of failure… but of succeeding at things in life that don’t really matter.\", \"author\": \"Francis Chan\" },\n        { \"plainText\": \"It had long since come to my attention that people of accomplishment rarely sat back and let things happen to them. They went out and happened to things.\", \"author\": \"Leonardo Da Vinci\" },\n        { \"plainText\": \"Remember that the happiest people are not those getting more, but those giving more.\", \"author\": \"H. Jackson Brown, Jr.\" },\n        { \"plainText\": \"It is our choices, that show what we truly are, far more than our abilities.\", \"author\": \"J. K Rowling\" },\n        { \"plainText\": \"Only put off until tomorrow what you are willing to die having left undone.\", \"author\": \"Pablo Picasso\" },\n        { \"plainText\": \"Many of life’s failures are people who did not realize how close they were to success when they gave up.\", \"author\": \"Thomas A. Edison\" },\n        { \"plainText\": \"If you want to live a happy life, tie it to a goal, not to people or things.\", \"author\": \"Albert Einstein\" },\n        { \"plainText\": \"Success is just a war of attrition. Sure, there’s an element of talent you should probably possess. But if you just stick around long enough, eventually something is going to happen.\", \"author\": \"Dax Shepard\" },\n        { \"plainText\": \"The opposite of love is not hate; it’s indifference.\", \"author\": \"Elie Wiesel\" },\n        { \"plainText\": \"The good news is that the moment you decide that what you know is more important than what you have been taught to believe, you will have shifted gears in your quest for abundance. Success comes from within, not from without.\", \"author\": \"Elie Wiesel\" },\n        { \"plainText\": \"I never knew how to worship until I knew how to love.\", \"author\": \"Henry Ward Beecher\" },\n        { \"plainText\": \"Every great dream begins with a dreamer. Always remember, you have within you the strength, the patience, and the passion to reach for the stars to change the world.\", \"author\": \"Harriet Tubman\" },\n        { \"plainText\": \"It is impossible to escape the impression that people commonly use false standards of measurement — that they seek power, success and wealth for themselves and admire them in others, and that they underestimate what is of true value in life.\", \"author\": \"Sigmund Freud\" },\n        { \"plainText\": \"A friend is someone who gives you total freedom to be yourself.\", \"author\": \"Jim Morrison\" },\n        { \"plainText\": \"Every great dream begins with a dreamer. Always remember, you have within you the strength, the patience, and the passion to reach for the stars to change the world.\", \"author\": \"Harriet Tubman\" },\n        { \"plainText\": \"Live in the sunshine, swim the sea, drink the wild air.\", \"author\": \"Ralph Waldo Emerson\" },\n        { \"plainText\": \"Life is trying things to see if they work.\", \"author\": \"Ray Bradbury\" },\n        { \"plainText\": \"Success in business requires training and discipline and hard work. But if you’re not frightened by these things, the opportunities are just as great today as they ever were.\", \"author\": \"David Rockefeller\" },\n        { \"plainText\": \"The No. 1 reason people fail in life is because they listen to their friends, family, and neighbors.\", \"author\": \"Napoleon Hill\" },\n        { \"plainText\": \"Your time is limited, so don’t waste it living someone else’s life. Don’t be trapped by dogma – which is living with the results of other people’s thinking.\", \"author\": \"Steve Jobs\" },\n        { \"plainText\": \"Success is how high you bounce when you hit bottom.\", \"author\": \"George S. Patton\" },\n        { \"plainText\": \"You will face many defeats in life, but never let yourself be defeated.\", \"author\": \"Maya Angelou\" },\n        { \"plainText\": \"May you live all the days of your life.\", \"author\": \"Jonathan Swift\" },\n        { \"plainText\": \"Success is not final, failure is not fatal: it is the courage to continue that counts.\", \"author\": \"Winston Churchill\" },\n        { \"plainText\": \"You’re not obligated to win. You’re obligated to keep trying. To the best you can do everyday.\", \"author\": \"Jason Mraz\" },\n        { \"plainText\": \"If you don’t design your own life plan, chances are you’ll fall into someone else’s plan. And guess what they have planned for you? Not much.\", \"author\": \"Jim Rohn\" },\n        { \"plainText\": \"The question isn’t who is going to let me; it’s who is going to stop me.\", \"author\": \"Ayn Rand\" },\n        { \"plainText\": \"The three great essentials to achieve anything worthwhile are, first, hard work; second, stick-to-itiveness; third, common sense.\", \"author\": \"Thomas A. Edison\" },\n        { \"plainText\": \"The successful warrior is the average man, with laser-like focus.\", \"author\": \"Bruce Lee\" },\n        { \"plainText\": \"A man is a success if he gets up in the morning and gets to bed at night, and in between he does what he wants to do.\", \"author\": \"Bob Dylan\" },\n        { \"plainText\": \"Yesterday is history, tomorrow is a mystery, today is a gift of God, which is why we call it the present.\", \"author\": \"Bil Keane\" },\n        { \"plainText\": \"Life isn’t about finding yourself. Life is about creating yourself.\", \"author\": \"George Bernard Shaw\" },\n        { \"plainText\": \"The whole secret of a successful life is to find out what is one’s destiny to do, and then do it.\", \"author\": \"Henry Ford\" },\n        { \"plainText\": \"Success? I don’t know what that word means. I’m happy. But success, that goes back to what in somebody’s eyes success means. For me, success is inner peace. That’s a good day for me.\", \"author\": \"Denzel Washington\" },\n        { \"plainText\": \"A kiss is a lovely trick designed by nature to stop speech when words become superfluous.\", \"author\": \"Ingrid Bergman\" },\n        { \"plainText\": \"Do not go where the path may lead; go instead where there is no path and leave a trail.\", \"author\": \"Ralph Waldo Emerson\" },\n        { \"plainText\": \"We are what we repeatedly do; excellence, then, is not an act but a habit.\", \"author\": \"Aristotle\" },\n        { \"plainText\": \"Always forgive your enemies; nothing annoys them so much.\", \"author\": \"Oscar Wilde\" },\n        { \"plainText\": \"The big lesson in life, baby, is never be scared of anyone or anything.\", \"author\": \"Frank Sinatra\" },\n        { \"plainText\": \"Love is an irresistible desire to be irresistibly desired.\", \"author\": \"Robert Frost\" },\n        { \"plainText\": \"Those who believe in telekinetics, raise my hand.\", \"author\": \"Kurt Vonnegut\" },\n        { \"plainText\": \"I only regret that I have but one life to give for my country.\", \"author\": \"Nathan Hale\" },\n        { \"plainText\": \"The person who reads too much and uses his brain too little will fall into lazy habits of thinking.\", \"author\": \"Albert Einstein\" },\n        { \"plainText\": \"Better to have loved and lost, than to have never loved at all.\", \"author\": \"St. Augustine\" },\n        { \"plainText\": \"Every child is an artist, the problem is staying an artist when you grow up.\", \"author\": \"Pablo Picasso\" },\n        { \"plainText\": \"Have no fear of perfection, you’ll never reach it.\", \"author\": \"Salvador Dali\" },\n        { \"plainText\": \"Life is not a problem to be solved, but a reality to be experienced.\", \"author\": \"Søren Kierkegaard\" },\n        { \"plainText\": \"Curiosity about life in all of its aspects, I think, is still the secret of great creative people.\", \"author\": \"Leo Burnett\" },\n        { \"plainText\": \"Imagination is the beginning of creation. You imagine what you desire, you will what you imagine, and at last, you create what you will.\", \"author\": \"George Bernard Shaw\" },\n        { \"plainText\": \"The journey of a thousand miles begins with one step.\", \"author\": \"Lao Tzu\" },\n        { \"plainText\": \"Imagination was given to man to compensate him for what he is not, and a sense of humor was provided to console him for what he is.\", \"author\": \"Oscar Wilde\" },\n        { \"plainText\": \"What you do speaks so loudly that I cannot hear what you say.\", \"author\": \"Ralph Waldo Emerson\" },\n        { \"plainText\": \"Spread love everywhere you go: first of all in your own house. Give love to your children, to your wife or husband, to a next door neighbor. Let no one ever come to you without leaving better and happier. Be the living expression of God’s kindness; kindness in your face, kindness in your eyes, kindness in your smile, kindness in your warm greeting.\", \"author\": \"Mother Theresa\" },\n        { \"plainText\": \"You must be the change you wish to see in the world.\", \"author\": \"Gandhi\" },\n        { \"plainText\": \"Strive not to be a success, but rather to be of value.\", \"author\": \"Albert Einstein\" },\n        { \"plainText\": \"Keep your face to the sunshine and you can never see the shadow.\", \"author\": \"Helen Keller\" },\n        { \"plainText\": \"The best way out is always through.\", \"author\": \"Robern Frost\" },\n        { \"plainText\": \"The dream crossed twilight between birth and dying.\", \"author\": \"T. S. Eliot\" },\n        { \"plainText\": \"Don’t think. Thinking is the enemy of creativity. It’s self-conscious, and anything self-conscious is lousy. You can’t try to do things. You simply must do things.\", \"author\": \"Ray Bradbury\" },\n        { \"plainText\": \"The power of imagination makes us infinite.\", \"author\": \"John Muir\" },\n        { \"plainText\": \"Doing the best at this moment puts you in the best place for the next moment.\", \"author\": \"Oprah Winfrey\" },\n        { \"plainText\": \"Originality is nothing but judicious imitation.\", \"author\": \"Voltaire\" },\n        { \"plainText\": \"Life is made of ever so many partings welded together.\", \"author\": \"Charles Dickens\" }\n    ] as Quotation[];","import quotes1 from '../data/sample-puzzles/puzzles-01'\nimport quotes2 from '../data/sample-puzzles/puzzles-02'\nimport { Quotation } from '../models/gameModels';\n\n\nexport function GetRandomQuote(): Quotation {\n    const quotes = getAllQuotes();\n    const index = Math.floor(Math.random() * quotes.length);\n    return quotes[index];\n}\n\nexport function encrypt(plainText: string) : string\n{\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  \n  const shuffled = shuffle(Array.from(alphabet));\n  const letterArray = Array.from(alphabet);\n\n  const letterMap = new Map<string,string>();\n  for (let i = 0; i < letterArray.length; ++i)\n  {\n    letterMap.set(letterArray[i], shuffled[i])\n  }\n\n  const plainChars = Array.from(plainText.toUpperCase());\n  const mappedChars = plainChars.map(c => letterMap.has(c) ? letterMap.get(c) : c);\n  const encryptedText = mappedChars.join(\"\");\n  console.log(`Plain text: ${plainText}`);\n  console.log(`Encrypted: ${encryptedText}`);\n\n  return encryptedText;\n}\n\nexport function getKnownQuotationCount() : number\n{\n  return getAllQuotes().length;\n}\n\nfunction getAllQuotes() : Quotation[]\n{\n  const quotes = [...quotes1, ...quotes2];\n  return quotes;\n}\n\nfunction shuffle(array: string[]) {\n    var currentIndex = array.length;\n    var temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n};","import React, {useState} from 'react';\nimport '../App.css';\nimport {GameStates} from '../models/gameModels';\nimport NoPuzzle from './NoPuzzle';\nimport Playing from './Playing';\nimport { encrypt} from '../services/quoteService';\nimport * as QuoteService from '../services/quoteService'\n\nexport default function Game() {\n\n  const [gameState, setGameState] = useState(GameStates.NO_PUZZLE)\n  const [cypher, setCypher] = useState('');\n  const [keymap, setKeymap] = useState(buildEmptyMap());\n  const [undoBuffer, setUndoBuffer] = useState<Map<string,string>[]>([]);\n\n  function resetAll()\n  {\n    setGameState(GameStates.NO_PUZZLE);\n    setCypher('');\n    setKeymap(buildEmptyMap());\n    setUndoBuffer([]);\n  }\n\n  function setCypherAndPlay(encryptedText: string)\n  {\n    setCypher(encryptedText.toUpperCase());\n    setGameState(GameStates.PLAYING);\n  }\n\n  function scramblePlaintextAndPlay(plainText: string)\n  {\n    const encryptedText = encrypt(plainText);\n    console.log(`Plain text: ${plainText}`);\n    console.log(`Encrypted: ${encryptedText}`);\n    setCypherAndPlay(encryptedText);\n  }\n\n  function useRandomQuote()\n  {\n    const quote = QuoteService.GetRandomQuote();\n    const plainText = quote.plainText + (quote.author ? ('-- ' + quote.author) : \"\");\n    scramblePlaintextAndPlay(plainText);\n  }\n\n  function startNewGame() {\n    resetAll();\n  }\n\n  function renderView() {\n    switch(gameState) {\n      case GameStates.NO_PUZZLE:\n        return (<NoPuzzle randomQuoteCount={QuoteService.getKnownQuotationCount()} setCypher={setCypherAndPlay} setPlainText={scramblePlaintextAndPlay} useRandomQuote={useRandomQuote} />);\n      case GameStates.PLAYING:\n        return (<Playing \n                  cypher={cypher} \n                  keymap={keymap} \n                  mapKey={mapKey} \n                  invokeUndo={undo} \n                  startNewGame={startNewGame} />\n                )\n    }\n  }\n\n  function undo() {\n    const lastMap = undoBuffer.pop();\n    if (lastMap !== undefined) {\n      setKeymap(lastMap);\n    }\n  }\n\n  function mapKey(k: string, v: string)\n  {\n    setKeyMapping(k, v);\n    undoBuffer.push(keymap);\n  }\n  \n  function setKeyMapping(k: string, v: string)\n  {\n    const newKeyMap:Map<string,string> = new Map<string, string>(keymap)\n    newKeyMap.set(k, v);\n    setKeymap(newKeyMap);\n  }\n\n  return (\n    <div className=\"Game\">\n      { renderView() }\n    </div>\n  );\n}\n\nfunction buildEmptyMap() : Map<string, string>\n{\n  const map = new Map<string, string>();\n\n  for (var i = 0; i<26; ++i)\n  {\n    var key = String.fromCharCode(65 + i);\n    map.set(key, \"\");\n  }\n\n  return map;\n}","import React from 'react';\nimport './App.css';\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}